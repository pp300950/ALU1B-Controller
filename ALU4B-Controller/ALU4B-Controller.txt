// ===================================================================================
// Arduino 1-Bit ALU Controller
// ===================================================================================

// --- ขาควบคุมและอินพุต ---
const int MUX_PIN_0 = 2;
const int MUX_PIN_1 = 3;
const int MUX_PIN_2 = 4;
const int SUB_ADD_PIN = 5;
const int A_INPUT_PIN = 6;
const int B_INPUT_PIN = 7;

// --- ขาเอาต์พุต ---
const int RESULT_OUTPUT_PIN = 9;
const int INVERT_OUTPUT_PIN = 10;
const int CARRY_OUT_PIN = 11;

void setup()
{
  pinMode(MUX_PIN_0, OUTPUT);
  pinMode(MUX_PIN_1, OUTPUT);
  pinMode(MUX_PIN_2, OUTPUT);
  pinMode(SUB_ADD_PIN, OUTPUT);
  pinMode(A_INPUT_PIN, OUTPUT);
  pinMode(B_INPUT_PIN, OUTPUT);

  pinMode(RESULT_OUTPUT_PIN, INPUT);
  pinMode(INVERT_OUTPUT_PIN, INPUT);
  pinMode(CARRY_OUT_PIN, INPUT);

  Serial.begin(9600);
}

void loop()
{
  if (Serial.available() > 0)
  {
    String input = Serial.readStringUntil('\n');
    input.trim();

    char muxCodeStr[4];
    int subAddPin, aInput, bInput, carryIn;

    // แก้ไข: รับข้อมูล 5 ตัวแปร
    int items = sscanf(input.c_str(), "%3s %d %d %d %d", muxCodeStr, &subAddPin, &aInput, &bInput, &carryIn);

    if (items == 5)
    { // แก้ไข: เช็คว่ารับข้อมูลครบ 5 ตัว
      int muxBit2 = muxCodeStr[0] - '0';
      int muxBit1 = muxCodeStr[1] - '0';
      int muxBit0 = muxCodeStr[2] - '0';

      int resultOutput = 0;
      int carryOutput = 0;

      // ----------------------------------------------------
      // ขั้นตอนที่ 1: ตั้งค่า A, B, และ SUB/ADD
      // ----------------------------------------------------
      digitalWrite(A_INPUT_PIN, aInput);
      digitalWrite(B_INPUT_PIN, bInput);
      digitalWrite(SUB_ADD_PIN, subAddPin);

      // ----------------------------------------------------
      // ขั้นตอนที่ 2: อ่านผลลัพธ์ (Sum/Logic) จาก MUX code ที่ส่งมา
      // ----------------------------------------------------
      digitalWrite(MUX_PIN_2, muxBit2);
      digitalWrite(MUX_PIN_1, muxBit1);
      digitalWrite(MUX_PIN_0, muxBit0);
      delay(10);

      /// อ่านค่าผลลัพธ์จากวงจร ALU
      int rawOutput;
      if (muxBit2 == 1 && muxBit1 == 1 && muxBit0 == 1)
      { // NOT operation
        rawOutput = digitalRead(INVERT_OUTPUT_PIN);
      }
      else
      {
        rawOutput = digitalRead(RESULT_OUTPUT_PIN);
      }

      // เก็บ "ผลบวกครึ่งทาง" ก่อนใส่ carryIn (สำหรับโมดูลบวก)
      int sumHalf = rawOutput;

      // ผลลัพธ์ฟูลแอดเดอร์ = (ผลบวกครึ่งทาง) XOR carryIn
      int fullSum = sumHalf ^ carryIn;

      // ----------------------------------------------------
      // ขั้นตอนที่ 3: อ่าน Carry Out ของ Half Adder (MUX=010)
      // ----------------------------------------------------
      digitalWrite(MUX_PIN_2, 0);
      digitalWrite(MUX_PIN_1, 1);
      digitalWrite(MUX_PIN_0, 0);
      delay(10);

      int carryAB = digitalRead(CARRY_OUT_PIN);

      // ฟูลแครรี่ = carryAB OR (sumHalf AND carryIn)
      int fullCarry = carryAB | (sumHalf & carryIn);

      // ----------------------------------------------------
      // ส่งผลลัพธ์กลับ (สำหรับโหมดลอจิก คุณอาจตั้ง carry=0 ได้ตามดีไซน์)
      // ----------------------------------------------------
      resultOutput = fullSum;
      carryOutput = fullCarry;

      // ส่งผลลัพธ์กลับ (สำหรับโหมดบวก: carry จริง, โหมดอื่น: 9)
      if (strcmp(muxCodeStr, "001") == 0) // ADD/SUB
      {
        carryOutput = fullCarry;
      }
      else
      {
        carryOutput = 9; // บังคับ carry เป็น 9 สำหรับฟังก์ชันอื่น
      }

      resultOutput = fullSum;

      Serial.print(resultOutput);
      Serial.print(" ");
      Serial.println(carryOutput);

    }
  }
}